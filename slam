#!/usr/bin/env python
"""
This is the main script of slam cli
"""

from core import api, arguments
from domains.view import SlamDomainView
from domains.controller import SlamDomainController
from networks.view import SlamNetworkView
from networks.controller import SlamNetworkController
from hardware.view import SlamHardwareView
from hardware.controller import SlamHardwareController
from hosts.controller import SlamHostController
from hosts.view import SlamHostView
from producer.view import SlamProducerView
from producer.controller import SlamProducerController

args = arguments.SlamArgumentsParser()
session = api.SlamAPIController()
session.login()
view = None
ctrl = None

if args.plugin() == 'domains':
    view = SlamDomainView(session)
    ctrl = SlamDomainController(session)
elif args.plugin() == 'networks':
    view = SlamNetworkView(session)
    ctrl = SlamNetworkController(session)
elif args.plugin() == 'hardware':
    view = SlamHardwareView(session)
    ctrl = SlamHardwareController(session)
elif args.plugin() == 'hosts':
    view = SlamHostView(session)
    ctrl = SlamHostController(session)
elif args.plugin() == 'producer':
    view = SlamProducerView(session)
    ctrl = SlamProducerController(session)

if args.action() == 'list':
    # list action mean retrieve all element of a plugin
    view.list()
elif args.action() == 'show':
    # show action mean retrieve all information about one element of a plugin
    view.show(args.options())
elif args.action() == 'create':
    # create action mean create a element on a plugin
    ctrl.create(args.options())
elif args.action() == 'delete':
    # delete action mean delete a element on a plugin
    ctrl.delete(args.options())
elif args.action() == 'update':
    # update action mean modify a item on a element
    ctrl.update(args.options())
elif args.action() == 'add':
    # add mean add a new item in a element
    ctrl.add(args.options())
elif args.action() == 'remove':
    # remove mean remove a item in a element
    ctrl.remove(args.options())
elif args.action() == 'display':
    # display mean retrive all features a in a item
    ctrl.display(args.options())
elif args.action() == 'include':
    # include mean add feature a in a item
    ctrl.include(args.options())
elif args.action() == 'exclude':
    # exclude mean remove feature a in a item
    ctrl.exclude(args.options())
elif args.action() == 'diff':
    # exclude mean remove feature a in a item
    view.diff()
elif args.action() == 'commit':
    # exclude mean remove feature a in a item
    ctrl.commit()
elif args.action() == 'publish':
    # exclude mean remove feature a in a item
    ctrl.publish()

